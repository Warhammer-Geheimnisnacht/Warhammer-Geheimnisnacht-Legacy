
namespace = HF

#Set up for finding an appropriate a Champion, who will tell the new recruit about the initation duel
character_event = {
    id = HF.10003
    is_triggered_only = yes
    hide_window = yes
    #ai = no

    trigger = {
        NOT = { has_character_flag = is_being_recruited_to_warband_by_parent }
        NOT = { has_character_flag = awaiting_initiation_trial }
        FROM = { leader = { is_member_of_any_warband_trigger = yes } }
    }

    immediate = {
        FROM = { save_event_target_as = warband_to_join } #used later for joining correct society
        set_character_flag = society_join_block
        set_character_flag = awaiting_initiation_trial
        save_event_target_as = new_recruit

        if = { #Find a non-prisoner member
            limit = { FROM = { leader = { prisoner = yes } } }
            FROM = {
                random_society_member = {
                    limit = {
                        society_member_of = event_target:warband_to_join
                        society_rank == 4
                        prisoner = no
                    }
                    character_event = { id = HF.10004 }
                    break = yes
                }
                random_society_member = {
                    limit = {
                        society_member_of = event_target:warband_to_join
                        society_rank == 3
                        prisoner = no
                    }
                    character_event = { id = HF.10004 }
                    break = yes
                }
                random_society_member = {
                    limit = {
                        society_member_of = event_target:warband_to_join
                        society_rank == 2
                        prisoner = no
                    }
                    character_event = { id = HF.10004 }
                    break = yes
                }
                random_society_member = {
                    limit = {
                        society_member_of = event_target:warband_to_join
                        society_rank == 1
                        prisoner = no
                    }
                    character_event = { id = HF.10004 }
                    break = yes
                }
            }
            #Everyone is somehow in prison so just use the leader anyway
        }
        FROM = { leader = { character_event = { id = HF.10004 } } }
    }
}

#Event for hero character (unless MP, this is an AI)
character_event = {
    id = HF.10004
    desc = EVTDESC_HF_10004
    picture = GFX_evt_melee
    border = GFX_event_normal_frame_war
    is_triggered_only = yes

	immediate = {
		hidden_effect = { save_event_target_as = champion_character }
	}

    option = {
        name = EVTOPTA_HF_10004 #I'll put on my most intimidating face
        custom_tooltip = { text = EVTOPTA_HF_10004_TT }
        add_legend_progress_trivial_effect = yes
        hidden_effect = {
            event_target:new_recruit = { character_event = { id = HF.10005 } } #sends event to player
        }
    }
}


#Do you want to accept the challenge to fight a member of the society, or not?
character_event = {
    id = HF.10005
    desc = EVTDESC_HF_10005
    picture = GFX_evt_teaching_moment
    border = GFX_event_normal_frame_war
    is_triggered_only = yes

	#
	###Bloddlines###
	#

    immediate = {
        if = {
            limit = {
                any_owned_bloodline = {
                    has_bloodline_flag = bloodline_legendary_warrior
                }
            }
            random_owned_bloodline = {
                limit = {
                    has_bloodline_flag = bloodline_legendary_warrior
                }
                preferred_limit = {
                    founder = { NOT = { character = ROOT } }
                }
                founder = { save_event_target_as = founder_target }
            }
        }
    }


    desc = {
        text = EVTDESC_HF_10005 #Default desc
        trigger = {
            NOT = {
                any_owned_bloodline = {
                    has_bloodline_flag = bloodline_legendary_warrior
                }
            }
        }
    }
    desc = {
        text = EVTDESC_HF_10005_bloodline # Bloodline special desc
        trigger = {
            any_owned_bloodline = {
                has_bloodline_flag = bloodline_legendary_warrior
            }
        }
    }

    option = { #I'll gladly fight to prove myself!
        name = {
            text = EVTOPTA_HF_10005 #default "Yeah, sure"
            trigger = {
                NOT = {
                    any_owned_bloodline = {
                        has_bloodline_flag = bloodline_legendary_warrior
                    }
                }
            }
        }
        name = {
            text = EVTOPTA_HF_10005_bloodline
            trigger = {
                any_owned_bloodline = {
                    has_bloodline_flag = bloodline_legendary_warrior
                }
            }
        }
        custom_tooltip = { text = EVTOPTA_HF_10005_TT }
        hidden_effect = {
            event_target:champion_character = { #Sends notification to the hero character
                set_character_flag = they_accepted@ROOT
                character_event = { id = HF.10006 }
            }
        }

        #FALLBACK:
        if = { #If FROM is no longer alive, clear relevant flags, etc...
            limit = { FROM = { NOT = { is_alive = yes } } }
            reset_warband_joining_chain_effect = yes
        }
        ai_chance = {
            factor = 100
        }
    }
    option = { #I changed my mind...
        name = EVTOPTB_HF_10005
        custom_tooltip = { text = EVTOPTB_HF_10005_TT }

        tooltip = {
            reverse_opinion = {
                who = event_target:champion_character
                modifier = opinion_disappointed
                years = 5
            }
        }
        ai_chance = {
            factor = 1
            modifier = {
                factor = 0
                has_character_flag = is_being_recruited_to_warband_by_parent
            }
        }

        hidden_effect = {
            clr_character_flag = society_join_block
            clr_character_flag = awaiting_initiation_trial
            event_target:champion_character = { #Sends notification to the hero character
                set_character_flag = they_declined@ROOT
                character_event = { id = HF.10006 }
            }
        }
    }
}

#The new recruit accepted/chickened out (for the hero character)
character_event = {
    id = HF.10006
    picture = GFX_evt_melee
    border = GFX_event_normal_frame_war
    is_triggered_only = yes

    immediate = {
        hidden_effect = { #Selects duel targets...
            if = {
                limit = { has_character_flag = they_accepted@FROM }
                any_society_member = {
                    limit = { same_society_as = ROOT }
                    score_value = {  #Prioritizes selecting a rank 1 member, who's available...!
                        value = 1
                        #Ranks...
                        additive_modifier = {
                            society_rank == 1
                            value = 100000
                        }
                        additive_modifier = {
                            society_rank == 2
                            value = 1000
                        }
                        additive_modifier = {
                            society_rank == 3
                            value = 10
                        }
                        additive_modifier = {
                            society_rank == 4
                            value = 1
                        }
                        #The fighters should be somewhat evenly matched...
                        additive_modifier = {
                            OR = {
                                AND = {
                                    duelist_skill_is_low_group_trigger = yes
                                    FROM = { duelist_skill_is_low_group_trigger = yes }
                                }
                                AND = {
                                    duelist_skill_is_medium_group_trigger = yes
                                    FROM = { duelist_skill_is_medium_group_trigger = yes }
                                }
                                AND = {
                                    duelist_skill_is_high_group_trigger = yes
                                    FROM = { duelist_skill_is_high_group_trigger = yes }
                                }
                            }
                            value = 1000
                        }
                        #If recruit is bad duelist, the fighters should be as evenly bad as can be...
                        additive_modifier = {
                            OR = {
                                AND = {
                                    is_the_worst_duelist_trigger = yes
                                    FROM = { is_the_worst_duelist_trigger = yes }
                                }
                                AND = {
                                    is_terrible_duelist_trigger = yes
                                    FROM = { is_terrible_duelist_trigger = yes }
                                }
                                AND = {
                                    is_bad_duelist_trigger = yes
                                    FROM = { is_bad_duelist_trigger = yes }
                                }
                            }
                            value = 1000
                        }
                        #Relationship with FROM... (so new ones can form)
                        additive_modifier = {
                            NOR = {
                                is_rival = FROM
                                is_lover = FROM
                                is_friend = FROM
                            }
                            value = 100
                        }
                        additive_modifier = {
                            OR = {
                                reverse_has_opinion_modifier = { who = FROM modifier = opinion_hate }
                                reverse_has_opinion_modifier = { who = FROM modifier = opinion_tortured_me }
                                reverse_has_opinion_modifier = { who = FROM modifier = opinion_mutilated_me }
                                reverse_has_opinion_modifier = { who = FROM modifier = opinion_imprisoned }
                            }
                            value = 100
                        }
                        additive_modifier = {
                            FROM = { PREV = { prev_is_lonely_this_romance_makes_sense_trigger = yes } }
                            value = 200
                        }
                        #Shouldn't be in prison/incapable, etc...
                        additive_modifier = {
                            block_general_event_trigger = yes
                            value = -5000
                        }
                        #Shouldn't be ROOT in this case...
                        additive_modifier = {
                            character = ROOT
                            value = -1000
                        }
                        #Should *absolutely* preferably be an AI...
                        additive_modifier = {
                            NOT = { ai = yes }
                            value = -1000
                        }
                        #Shouldn't be sick, etc...
                        additive_modifier = {
                            value = -500
                            OR = {
                                has_character_modifier = bedridden_illness
                                has_character_modifier = severe_illness
                                character_disease_trigger = yes
                                has_severe_disability_trigger = yes
                            }
							NOR = {
								religion = nurgle
								trait = norscan_patron_nurgleth
							}
                        }
                        #Shouldn't be prone to dying and breaking the events...
                        additive_modifier = {
                            value = -500
                            OR = {
                                age = 60
                                is_maimed_trigger = yes #has a maimed trait
                            }
                        }
                    }
                    save_event_target_as = duel_target
                }
            }
        }
    }

    desc = {
        text = EVTDESC_HF_10006_yes
        trigger = {
            has_character_flag = they_accepted@FROM
        }
    }
    desc = {
        text = EVTDESC_HF_10006_no
        trigger = {
            has_character_flag = they_declined@FROM
        }
    }

    option = { #Let's find someone to duel them!
        name = EVTOPTA_HF_10006_yes
        custom_tooltip = { text = EVTOPTA_HF_10006_TT_1 }
        show_portrait = event_target:duel_target
        trigger = {
            has_character_flag = they_accepted@FROM
        }
    }
    option = { #That little coward
        name = EVTOPTA_HF_10006_no
        opinion = {
            who = FROM
            modifier = opinion_disappointed
            years = 5
        }
        trigger = {
            has_character_flag = they_declined@FROM
        }
    }
    after = {
        hidden_effect = {
            if = {
                limit = {
                    has_character_flag = they_accepted@FROM
                }
                event_target:new_recruit = { character_event = { id = HF.10007 } } #send ping to set up duel
            }
            clr_character_flag = they_accepted@FROM
            clr_character_flag = they_declined@FROM
        }
    }
}


#Ping to player to set scopes
character_event = {
    id = HF.10007
    hide_window = yes
    is_triggered_only = yes
    immediate = {
        #FALLBACK:
        if = { #If FROM is no longer alive, clear relevant flags, etc...
            limit = { event_target:duel_target = { NOT = { is_alive = yes } } }
            reset_warband_joining_chain_effect = yes
        }

        set_character_flag = mock_duel
        #REQUIRED event targets for setting up duel evaluation! (1 & 2)
        save_event_target_as = combatant_1 #the person issuing the duel...
        event_target:duel_target = {
            save_event_target_as = combatant_2 #the target of the duel...
            character_event = { id = HFP.10095 } #player challenges you to a duel
        }
    }
}

character_event = { #Hero character's reaction, who then sends acceptance/refusal letter to player
    id = HF.10008
    picture = GFX_evt_melee
    border = GFX_event_normal_frame_war
    is_triggered_only = yes
    trigger = {

    }

    immediate = {

    }

    desc = {
        text = EVTDESC_HF_10008_they_succeeded_greatly
        trigger = {
            FROM = {
                NOR = {
                    has_character_flag = was_mildly_injured
                    has_character_flag = was_actually_injured
                    has_character_flag = duel_fled
                }
            }
        }
    }
    desc = {
        text = EVTDESC_HF_10008_they_were_mildly_injured
        trigger = {
            FROM = { has_character_flag = was_mildly_injured }
        }
    }
    desc = {
        text = EVTDESC_HF_10008_they_were_seriously_injured
        trigger = {
            FROM = { has_character_flag = was_actually_injured }
        }
    }
    desc = {
        text = EVTDESC_HF_10008_they_fled
        trigger = {
            FROM = { has_character_flag = duel_fled }
        }
    }

    option = {
        name = {
            text = EVTOPTA_HF_10008_impressed
            trigger = {
                FROM = {
                    NOR = {
                        has_character_flag = was_mildly_injured
                        has_character_flag = was_actually_injured
                        has_character_flag = duel_fled
                    }
                }
            }
        }
        name = {
            text = EVTOPTA_HF_10008_accepting
            trigger = {
                FROM = { has_character_flag = was_mildly_injured }
            }
        }
        name = {
            text = EVTOPTA_HF_10008_surprised
            trigger = {
                FROM = { has_character_flag = was_actually_injured }
            }
        }
        name = {
            text = EVTOPTA_HF_10008_unimpressed
            trigger = {
                FROM = { has_character_flag = duel_fled }
            }
        }
        if = {
            limit = {
                NOT = { FROM = { has_character_flag = duel_fled } }
            }
            custom_tooltip = { text = EVTOPTA_HF_10008_TT }
            add_legend_progress_trivial_effect = yes
            FROM = { letter_event = { id = HF.10009 days = 5 } }
        }
        else = {
            custom_tooltip = { text = EVTOPTB_HF_10008_TT }
            FROM = { letter_event = { id = HF.10010 days = 5 } }
        }
    }
}

letter_event = { #SUCCESS: Welcome to the society!
    id = HF.10009
    picture = GFX_evt_melee
    border = GFX_event_letter_frame_war
    is_triggered_only = yes

    trigger = {
        NOT = { has_character_flag = show_once_flag }
    }

    immediate = {
        set_character_flag = show_once_flag
    }

    desc = {
        text = EVTDESC_HF_10009_succeeded_greatly
        trigger = {
            NOR = {
                has_character_flag = was_mildly_injured
                has_character_flag = was_actually_injured
                has_character_flag = duel_fled
            }
        }
    }
    desc = {
        text = EVTDESC_HF_10009_was_mildly_injured
        trigger = { has_character_flag = was_mildly_injured }
    }
    desc = {
        text = EVTDESC_HF_10009_was_seriously_injured
        trigger = { has_character_flag = was_actually_injured }
    }

    option = {
        name = EVTOPTA_HF_10009

        join_society = event_target:warband_to_join


        if = {
            limit = { has_character_flag = minor_reward }
            add_society_currency_minor_effect = yes
        }
        if = {
            limit = { has_character_flag = medium_reward }
            add_society_currency_medium_effect = yes
        }

        hidden_effect = {
            clr_character_flag = was_actually_injured
            clr_character_flag = was_mildly_injured
            clr_character_flag = awaiting_initiation_trial
            clr_character_flag = duel_fled
            clr_character_flag = minor_reward
            clr_character_flag = medium_reward
            clr_character_flag = show_once_flag
        }

        ### For characters who were recruited by their parents...
        if = {
            limit = {
                has_character_flag = is_being_recruited_to_warband_by_parent
                event_target:recruiting_parent = { is_alive = yes }
            }
            custom_tooltip = { text = your_parent_will_be_proud_tt }
            tooltip = { #You are happy to have been recruited, and they are impressed you succeeded...
                opinion = {
                    modifier = opinion_grateful
                    who = event_target:recruiting_parent
                    years = 5
                }
                reverse_opinion = {
                    modifier = opinion_impressed
                    who = event_target:recruiting_parent
                    years = 5
                }
            }

            set_character_flag = passed_initiation
            event_target:recruiting_parent = { character_event = { id = HF.10013 } }
        }
        ###
        clr_character_flag = society_join_block
    }
}

letter_event = { #FAILURE: You can't sit with us
    id = HF.10010
    desc = EVTDESC_HF_10010
    picture = GFX_evt_melee
    border = GFX_event_letter_frame_war
    is_triggered_only = yes
    trigger = {

    }

    immediate = {

    }

    option = {
        name = EVTOPTA_HF_10010
        custom_tooltip = { text = EVTOPTA_HF_10010_TT } #You will be blocked from joining for 10 years
        #add blocking modifier (hidden)

        hidden_effect = {
            clr_character_flag = was_actually_injured
            clr_character_flag = was_mildly_injured
            clr_character_flag = awaiting_initiation_trial
            clr_character_flag = duel_fled
            clr_character_flag = minor_reward
            clr_character_flag = medium_reward
        }

        if = { #For characters who were recruited by their parents...
            limit = {
                has_character_flag = is_being_recruited_to_warband_by_parent
                event_target:recruiting_parent = { is_alive = yes }
            }
            custom_tooltip = { text = notify_parent_recruiter_tt } #Your parent will be notified.
            set_character_flag = failed_initiation
            event_target:recruiting_parent = { character_event = { id = HF.10014 } }
        }
        clr_character_flag = society_join_block
    }
}



#In case the hero character has died or something odd happens:
### Gating event on player to make sure societies are joined correctly! [sent from clean up, after duels]
character_event = {
    id = HF.10011
    hide_window = yes
    is_triggered_only = yes
    immediate = {
        #sends outcome of the initiation duel to leader, who instantly sends a response to the player: Join us!/Banned for 10 years!
        if = { #check if original hero is still around...
            limit = {
                event_target:champion_character = {
                    block_general_event_trigger = no
                }
            }
            event_target:champion_character = { character_event = { id = HF.10008 } }
        }
        else = { #Otherwise, look elsewhere...
            if = { #Find a non-prisoner member to send the response...
                limit = { event_target:warband_to_join = { leader = { prisoner = yes } } }
                event_target:warband_to_join = {
                    random_society_member = {
                        limit = {
                            society_member_of = event_target:warband_to_join
                            society_rank == 4
                            prisoner = no
                        }
                        save_event_target_as = champion_character
                        character_event = { id = HF.10008 }
                        break = yes
                    }
                    random_society_member = {
                        limit = {
                            society_member_of = event_target:warband_to_join
                            society_rank == 3
                            prisoner = no
                        }
                        save_event_target_as = champion_character
                        character_event = { id = HF.10008 }
                        break = yes
                    }
                    random_society_member = {
                        limit = {
                            society_member_of = event_target:warband_to_join
                            society_rank == 2
                            prisoner = no
                        }
                        save_event_target_as = champion_character
                        character_event = { id = HF.10008 }
                        break = yes
                    }
                    random_society_member = {
                        limit = {
                            society_member_of = event_target:warband_to_join
                            society_rank == 1
                            prisoner = no
                        }
                        save_event_target_as = champion_character
                        character_event = { id = HF.10008 }
                        break = yes
                    }
                }
                #Everyone is somehow in prison so just use the leader anyway (there was no "break = yes")
            }
            event_target:warband_to_join = { leader = { character_event = { id = HF.10008 } } }
            event_target:champion_character = { character_event = { id = HF.10008 } }
        }
    }
}

########################################################
# Recruit/Induct your Child into your Warrior Lodge
########################################################
character_event = { #Fires for the adult child (from decision)
    id = HF.10016
    desc = EVTDESC_HF_10016
    picture = GFX_evt_melee
    border = GFX_event_normal_frame_war
    is_triggered_only = yes

    trigger = {

    }

    immediate = {
        #Find a non-prisoner member
        any_society_member = {
            limit = {
                society_member_of = event_target:warband_to_join
                prisoner = no
            }
            score_value = { #Prioritizes selecting some kind of warrior...
                value = 10
                warrior_hero_score = yes
            }
            save_event_target_as = champion_character
        }
        if = { #If it failed to save anyone...
            limit = { event_target:champion_character = { always = no } }
            #Means everyone is somehow in prison so just use the leader anyway...?
            event_target:warband_to_join = { leader = { save_event_target_as = champion_character } }
        }
    }

    option = {
        name = EVTOPTA_HF_10016 #YES - It's what I always wanted
        custom_tooltip = { text = EVTOPTA_HF_10016_TT }

        event_target:champion_character = {
            character_event = { id = HF.10004 } #Send regular "I wanna join"-event to high-ranking member
        }
        set_character_flag = accepted_trial

        ai_chance = {
            factor = 100
            #warrior_recruit_score = yes
            modifier = {
                factor = 0
                is_in_society = yes
            }
        }
        trigger = { # Kids only say yes if they not already a secret member of some kind...
            is_secret_religious_society_member_trigger = no
            is_devil_worshiper_trigger = no
            NOT = { society_member_of = the_assassins }
        }
    }
    option = {
        name = EVTOPTB_HF_10016 #NO - I will carve my own path
        custom_tooltip = { text = EVTOPTB_HF_10016_TT }
        set_character_flag = refused_trial

        clr_character_flag = society_join_block
        clr_character_flag = awaiting_initiation_trial

        hidden_effect = { character_event = { id = HF.10015 days = 365 } }

        ai_chance = {
            factor = 10
            modifier = {
                factor = 1.5
                trait = stubborn
            }
        }
        trigger = { #Only show this option if parent does *not* have a mission to recruit you (or if you have somehow had time to join a secret society *before* they tried recruiting you)...
            OR = {
                NOT = {
                    event_target:recruiting_parent = {
                        has_quest = quest_warband_recruit
                        quest_target = { character = ROOT }
                    }
                }
                is_secret_religious_society_member_trigger = yes
                is_devil_worshiper_trigger = yes
                society_member_of = the_assassins
            }
        }
    }

    after = { #Answer is relayed to parent...
        event_target:recruiting_parent = {
            character_event = { id = HF.10012 days = 1 }
        }
    }
}

#Delayed clean up event (for child who turned down recruitment)
character_event = {
    id = HF.10015
    hide_window = yes
    is_triggered_only = yes
    immediate = {
        clr_character_flag = is_being_recruited_to_warband_by_parent
        clr_character_flag = refused_trial
    }
}

#For the parent - Child said yes/no. If yes, you will updated after the trial again.
character_event = {
    id = HF.10012
    picture = GFX_evt_melee
    border = GFX_event_normal_frame_war
    is_triggered_only = yes

    desc = {
        text = EVTDESC_HF_10012_A
        trigger = {
            FROM = { has_character_flag = accepted_trial }
            NOT = { event_target:champion_character = { character = ROOT } }
        }
    }
    desc = {
        text = EVTDESC_HF_10012_A_hero_is_parent
        trigger = {
            FROM = { has_character_flag = accepted_trial }
            event_target:champion_character = { character = ROOT }
        }
    }
    desc = {
        text = EVTDESC_HF_10012_B
        trigger = {
            FROM = { has_character_flag = refused_trial }
            NOT = { event_target:champion_character = { character = ROOT } }
        }
    }
    desc = {
        text = EVTDESC_HF_10012_B_hero_is_parent
        trigger = {
            FROM = { has_character_flag = refused_trial }
            event_target:champion_character = { character = ROOT }
        }
    }

    option = {

        name = {
            text = EVTOPTA_HF_10012_1 #I was just waiting for you to be ready!
            trigger = { event_target:champion_character = { NOT = { character = ROOT } } }
        }
        name = {
            text = EVTOPTA_HF_10012_2 #We'll do this the right way.
            trigger = { event_target:champion_character = { character = ROOT } }
        }
        if = {
            limit = { event_target:champion_character = { NOT = { character = ROOT } } }
            custom_tooltip = { text = EVTOPTA_HF_10012_TT }
            show_portrait = event_target:champion_character
        }

        trigger = { FROM = { has_character_flag = accepted_trial } }
    }
    option = {
        name = EVTOPTB_HF_10012 #Why, you ungrateful little...
        custom_tooltip = { text = EVTOPTB_HF_10012_TT }
        if = {
            limit = { event_target:champion_character = { NOT = { character = ROOT } } }
            show_portrait = event_target:champion_character
        }
        trigger = { FROM = { has_character_flag = refused_trial } }
    }

    after = {
        FROM = {
            clr_character_flag = accepted_trial
            clr_character_flag = refused_trial
        }
    }
}

#For the parent - Child made it through the duel and has joined the Warrior Lodge!
character_event = {
    id = HF.10013
    picture = GFX_evt_camaraderie
    desc = EVTDESC_HF_10013_A #"I am one of you guys now!"
    border = GFX_event_normal_frame_war
    is_triggered_only = yes

    trigger = {
        NOT = { has_character_flag = show_only_once@FROM }
    }

    immediate = {
        set_character_flag = show_only_once@FROM
    }

    option = {
        name = EVTOPTA_HF_10013 #I knew you had it in you.
        custom_tooltip = { text = EVTOPTA_HF_10013_TT }
        prestige = 20
        reverse_opinion = {
            modifier = opinion_grateful
            who = FROM
            years = 5
        }
        opinion = {
            modifier = opinion_impressed
            who = FROM
            years = 5
        }
        if = {
            limit = {
                has_quest = quest_warband_recruit
                quest_target = { character = FROM }
            }
            clr_quest = quest_warband_recruit
            add_society_currency_medium_effect = yes
        }
        add_legend_progress_trivial_effect = yes
        trigger = { same_society_as = FROM }
    }

    ### Only if left society: ###
    option = {
        name = EVTOPTB_HF_10013 #You make me regret my decision to leave...
        custom_tooltip = { text = EVTOPTB_HF_10013_TT }
        if = {
            limit = { NOT = { trait = depressed } }
            random = {
                chance = 10
                add_trait_depressed_effect = yes
            }
        }
        trigger = { NOT = { same_society_as = FROM } }
    }
    option = {
        name = EVTOPTC_HF_10013 #I'm not impressed.
        custom_tooltip = { text = EVTOPTC_HF_10013_TT }

        if = {
            limit = {
                NOT = { trait = kind }
                NOT = { trait = cruel }
            }
            add_trait = cruel
        }
        else_if = {
            limit = {
                trait = kind
            }
            remove_trait = kind
        }
        reverse_opinion = {
            modifier = opinion_disappointed
            who = FROM
            years = 5
        }

        trigger = { NOT = { same_society_as = FROM } }
    }

    after = {
        FROM = {
            clr_character_flag = passed_initiation
            clr_character_flag = is_being_recruited_to_warband_by_parent
            hidden_tooltip = { character_event = { id = HF.25400 } } #Flavor Tombola for underage recruits.
        }
        clr_character_flag = show_only_once@FROM
    }
}

#For the parent - Child somehow failed to join Warrior Lodge...
character_event = {
    id = HF.10014
    picture = GFX_evt_teaching_moment
    border = GFX_event_normal_frame_war
    is_triggered_only = yes

    trigger = {
        NOT = { has_character_flag = show_only_once@FROM }
    }

    immediate = {
        set_character_flag = show_only_once@FROM
    }

    desc = {
        text = EVTDESC_HF_10014_A
        trigger = {
            FROM = { NOT = { has_character_flag = chickened_out } }
        }
    }
    desc = {
        text = EVTDESC_HF_10014_B
        trigger = {
            FROM = { has_character_flag = chickened_out }
        }
    }


    option = {
        name = EVTOPTA_HF_10014 #I'm still proud to call you family.
        custom_tooltip = { text = EVTOPTA_HF_10014_TT }

        if = {
            limit = {
                NOT = { trait = kind }
                NOT = { trait = cruel }
				NOT = { religion = khorne }
            }
            add_trait = kind
        }
        else_if = {
            limit = {
                trait = cruel
				NOT = { religion = khorne }
            }
            remove_trait = cruel
        }
        FROM = { set_character_flag = parent_was_supportive }
    }
    option = {
        name = EVTOPTB_HF_10014 #I expected more, honestly...
        custom_tooltip = { text = EVTOPTB_HF_10014_TT }

        prestige = 20

        if = {
            limit = {
                NOT = { trait = kind }
                NOT = { trait = cruel }
            }
            add_trait = cruel
        }
        else_if = {
            limit = {
                trait = kind
            }
            remove_trait = kind
        }
        else_if = {
            limit = {
                NOT = { trait = honest }
            }
            add_trait = honest
        }
        FROM = { set_character_flag = parent_was_mean }
    }
	option = {
        name = EVTOPTC_HF_10014 #You kill your son for being a litte bich
        custom_tooltip = { text = EVTOPTC_HF_10014_TT }

        prestige = 20

        if = {
            limit = {
                NOT = { trait = kind }
                religion_openly_norcan_chaos_trigger = yes
            }
            add_trait = cruel
        }
        else_if = {
            limit = {
                trait = kind
            }
            remove_trait = kind
			add_trait = cruel
        }
    }
    after = {
        if = {
            limit = {
                has_quest = quest_warband_recruit
                quest_target = { character = FROM }
            }
            clr_quest = { id = quest_warband_recruit failure = yes }
        }
        FROM = {
            clr_character_flag = failed_initiation
            clr_character_flag = chickened_out
            clr_character_flag = is_being_recruited_to_warband_by_parent
            character_event = { id = HF.10017 days = 5 }
			death = {
				death_reason = {
					random_list = {
						10 = {
							death_execution_disembowelment
						}
						10 = {
							death_execution_boiling
						}
						10 = {
							death_execution_hunt
						}
						10 = {
							death_execution_beheading
						}
						10 = {
							death_execution_flaying
						}
						10 = {
							death_execution_impaling
						}
						10 = {
							death_execution_horses
						}
						10 = {
							death_execution_sawing
						}
						10 = {
							death_execution_live_burial
						}
						10 = {
							death_execution_hanging
						}
					}
				}
			}
        }
        clr_character_flag = show_only_once@FROM
    }
}

#Adult Child receives parent's reaction to failure to join Warrior Lodge.
character_event = {
    id = HF.10017
    picture = GFX_evt_camaraderie
    border = GFX_event_normal_frame_war
    is_triggered_only = yes

    trigger = {
        FROM = { is_alive = yes }
    }

    desc = {
        text = EVTDESC_HF_10017_A #They took it well.
        trigger = { has_character_flag = parent_was_supportive }
    }
    desc = {
        text = EVTDESC_HF_10017_B #They took it poorly.
        trigger = { has_character_flag = parent_was_mean }
    }

    ############### Good reaction #########
    option = {
        name = EVTOPTA_HF_10017_1 #Family is most important, after all.
        if = {
            limit = { has_dlc = "Way of Life" }
            set_focus = focus_family
        }
        opinion = {
            modifier = comforted_opinion
            who = FROM
            years = 5
        }
        trigger = { has_character_flag = parent_was_supportive }
    }
    option = {
        name = EVTOPTA_HF_10017_2 #I'm lucky to have him/her.

        opinion = {
            modifier = comforted_opinion
            who = FROM
            years = 5
        }

        trigger = { has_character_flag = parent_was_supportive }
    }
    ############### Poor reaction #########
    option = {
        name = EVTOPTB_HF_10017_2 #This is not the end of my story!

        if = {
            limit = { NOT = { trait = stressed } }
            add_trait = stressed
        }
        if = {
            limit = { NOT = { trait = ambitious } }
            add_trait = ambitious
        }

        custom_tooltip = { text = EVTOPTB_HF_10017_TT }
        trigger = { has_character_flag = parent_was_mean }
    }
    option = {
        name = EVTOPTB_HF_10017_1 #I am an embarrassment.
        trigger = { has_character_flag = parent_was_mean }
    }
}



########################################################
# RANK 4 POWER - Choose Chaos Aspect trait
########################################################


### Add more for the other gods

# START & END: Has either Duelist, Strategist, or Impaler already - Replace the existing trait
character_event = {
    id = HF.10020
    picture = GFX_evt_armory
    border = GFX_event_normal_frame_war

    is_triggered_only = yes

    desc = {
        trigger = { trait = duelist }
        picture = GFX_evt_battle
        text = EVTDESC_HF_10020_duelist
    }

    desc = {
        trigger = { trait = strategist }
        picture = GFX_evt_battle
        text = EVTDESC_HF_10020_strategist
    }

    desc = {
        trigger = { trait = impaler }
        picture = GFX_evt_battle
        text = EVTDESC_HF_10020_impaler
    }

    option = { # Change to Duelist
        name = EVTOPTA_HF_10020
        if = { limit = { trait = strategist }
            remove_trait = strategist
        }
        if = { limit = { trait = impaler }
            remove_trait = impaler
        }
        add_trait = duelist
        trigger = { NOT = { trait = duelist } }
    }

    option = { # Change to Strategist
        name = EVTOPTB_HF_10020
        if = { limit = { trait = duelist }
            remove_trait = duelist
        }
        if = { limit = { trait = impaler }
            remove_trait = impaler
        }
        add_trait = strategist
        trigger = { NOT = { trait = strategist } }
    }

    option = { # Change to Impaler
        name = EVTOPTC_HF_10020
        if = { limit = { trait = duelist }
            remove_trait = duelist
        }
        if = { limit = { trait = strategist }
            remove_trait = strategist
        }
        add_trait = impaler
        trigger = { NOT = { trait = impaler } }
    }

    option = { # Change your mind
        name = EVTOPTD_HF_10020
        add_society_currency_minor_effect = yes
    }

    after = { clr_character_flag = choosing_chaos_aspect }
}


# START: No Previous Lifestyle trait - Choose one
character_event = {
    id = HF.10021
    desc = EVTDESC_HF_10021
    picture = GFX_evt_armory
    border = GFX_event_normal_frame_war

    is_triggered_only = yes

    option = { # Choose Dueling
        name = EVTOPTA_HF_10021
        show_trait = duelist

        custom_tooltip = {
            text = EVTOPTA_HF_10021_tt
            character_event = { id = HF.10022 days = 20 random = 20 }
        }


        ai_chance = {
            factor = 1
            modifier = {
                factor = 1.1
                has_duel_exp_modifier_trigger = yes
            }
            modifier = {
                factor = 3
                trait = brave
            }
        }
    }

    option = { # Choose Strategy
        name = EVTOPTB_HF_10021

        show_trait = strategist

        custom_tooltip = {
            text = EVTOPTB_HF_10021_tt
            character_event = { id = HF.10025 days = 20 random = 20 }
        }

        ai_chance = {
            factor = 1
            modifier = {
                factor = 1.5
                has_education_stewardship_trigger = yes
            }
        }
    }

    option = { # Choose Impaler
        name = EVTOPTC_HF_10021

        show_trait = impaler

        custom_tooltip = {
            text = EVTOPTC_HF_10021_tt
            character_event = { id = HF.10030 days = 20 random = 20 }
        }

        ai_chance = {
            factor = 1
        }
    }

    option = { # Change your mind
        name = EVTOPTD_MNM_1900

        add_society_currency_minor_effect = yes
        clr_character_flag = choosing_chaos_aspect
    }
}

# Become a Duelist
character_event = {
    id = HF.10022
    desc = EVTDESC_HF_10022
    picture = GFX_evt_armory
    border = GFX_event_normal_frame_war

    is_triggered_only = yes

    immediate = {
        hidden_effect = {
            if = {
                limit = {
                    any_society_member = { #If there is a character with the desired trait...
                        same_society_as = ROOT
                        ai = yes
                        NOT = { character = ROOT }
                        NOT = { block_general_event_trigger = yes }
                        trait = duelist
                    }
                }
                random_society_member = { #save them as mentor...
                    limit = {
                        same_society_as = ROOT
                        ai = yes
                        NOT = { character = ROOT }
                        NOT = { block_general_event_trigger = yes }
                        trait = duelist
                    }
                    save_event_target_as = mentor_target
                }
            }
        }
    }

    option = {
        name = EVTOPTA_HF_10022 #I will ask fellow society member for guidance!

        set_character_flag = opt_A

        if = { #if you already have a friend-opinion in place, become friends...
            limit = {
                OR = {
                    reverse_has_opinion_modifier = { who = event_target:mentor_target modifier = opinion_budding_friendship }
                    has_opinion_modifier = { who = event_target:mentor_target modifier = opinion_budding_friendship }
                }
            }
            tooltip = { add_friend = event_target:mentor_target }
        }
        else_if = { #if they don't hate you, they feel professionally praised...
            limit = {
                event_target:mentor_target = {
                    potentially_interested_in_rivaling_root_trigger = no
                }
            }
            tooltip = {
                reverse_opinion = {
                    who = event_target:mentor_target
                    modifier = opinion_was_praised
                    years = 10
                }
            }
        }
        else = { #otherwise, they probably hate you, but are strangely flattered by your request...
            tooltip = {
                reverse_opinion = {
                    who = event_target:mentor_target
                    modifier = opinion_strangely_flattered
                    years = 10
                }
            }
        }

        prestige = -25

        if = {
            limit = { event_target:mentor_target = { is_alive = yes } }
            event_target:mentor_target = {
                character_event = { id = HF.10023 } #Ping, before trait is awarded
            }
        }
        else = {  #so to not freeze the decision (in case MP and time ticks and they die)
            clr_character_flag = choosing_chaos_aspect
            add_society_currency_minor_effect = yes
        }

        ai_chance = {
            factor = 1
            modifier = {
                factor = 2
                has_pleasant_personality_trigger = yes
            }
        }

        trigger = {
            event_target:mentor_target = { always = yes }
        }
    }

    option = {
        name = EVTOPTB_HF_10022 #hire someone to train you
        set_character_flag = opt_B

        scaled_wealth = { value = -0.4 min = -40 }

        add_trait_silently_diligent_effect = yes
        remove_trait_silently_slothful_effect = yes

        add_character_modifier = {
            modifier = rigorous_practice
            duration = 3650
        }

        hidden_effect = {
            clear_event_target = mentor_target
            character_event = { id = HF.10024 days = 60 random = 30 } #Lifestyle achieved: DUELIST
        }

        ai_chance = {
            factor = 1
            modifier = {
                factor = 0.2
                trait = greedy
            }
            modifier = {
                factor = 1.5
                trait = proud
            }
            modifier = {
                factor = 0
                NOT = { wealth = 50 }
            }
        }
    }

    option = {
        name = EVTOPTC_HF_10022 #go about it alone

        set_character_flag = opt_C

        hidden_effect = {
            clear_event_target = mentor_target
            character_event = { id = HF.10024 days = 90 random = 30 } #Lifestyle achieved: DUELIST
        }

        ai_chance = {
            factor = 1
        }
    }
}

#[Sidetrack from option A] - For the mentor: how involved do you wanna be?
character_event = {
    id = HF.10023
    desc = EVTDESC_HF_10023
    picture = GFX_evt_teaching_moment
    border = GFX_event_normal_frame_war
    is_triggered_only = yes

    trigger = {
        FROM = { is_alive = yes }
        is_alive = yes
    }

    fail_trigger_effect = {
        if = {
            limit = { NOT = { is_alive = yes } }  #so to not freeze the decision
            FROM = {
                clr_character_flag = choosing_chaos_aspect
                add_society_currency_minor_effect = yes
            }
        }
    }

    option = {
        name = EVTOPTA_HF_10023
        add_character_modifier = {
            modifier = duelist_mentor
            duration = 730
        }
    }
    option = {
        name = EVTOPTB_HF_10023

        scaled_wealth = { value = -0.2 min = -20 }
    }
    after = {
        if = { #if you already have a friend-opinion in place, become friends...
            limit = {
                OR = {
                    reverse_has_opinion_modifier = { who = FROM modifier = opinion_budding_friendship }
                    has_opinion_modifier = { who = FROM modifier = opinion_budding_friendship }
                }
            }
            add_friend = FROM
        }
        else_if = { #if you don't hate them, feel professionally praised...
            limit = {
                FROM = { root_potentially_interested_in_rivaling_this_trigger = no }
            }
            reverse_opinion = {
                who = FROM
                modifier = opinion_was_praised
                years = 10
            }
        }
        else = { #otherwise, you probably hate them, but are strangely flattered by the request...
            reverse_opinion = {
                who = FROM
                modifier = opinion_strangely_flattered
                years = 10
            }
        }
        FROM = { character_event = { id = HF.10024 days = 60 random = 30 } } #Lifestyle achieved: DUELIST
    }
}

#Lifestyle achieved: DUELIST
character_event = {
    id = HF.10024
    picture = GFX_evt_duel_team
    border = GFX_event_normal_frame_war

    is_triggered_only = yes

    desc = { #fallback in case mentor died
        trigger = {
            has_character_flag = opt_A
            FROM = { NOT = { is_alive = yes } }
        }
        text = EVTDESC_HF_10024_mentor_died
    }
    desc = {
        trigger = {
            has_character_flag = opt_A
            FROM = { is_alive = yes }
        }
        text = EVTDESC_HF_10024_A
    }
    desc = {
        trigger = {
            OR = {
                has_character_flag = opt_B
                has_character_flag = opt_C
            }
        }
        text = EVTDESC_HF_10024_B
    }
    option = {
        name = {
            text = EVTOPTA_HF_10024_A
            trigger = { has_character_flag = opt_A }
        }
        name = {
            text = EVTOPTA_HF_10024_B
            trigger = { has_character_flag = opt_B }
        }
        name = {
            text = EVTOPTA_HF_10024_C
            trigger = { has_character_flag = opt_C }
        }

        hidden_tooltip = {
            if = {
                limit = {
                    lifestyle_traits = 1
                }
                remove_lifestyle_trait_effect = yes
            }
        }
        add_trait = duelist
        add_legend_progress_trivial_effect = yes
        clr_character_flag = choosing_chaos_aspect
        clr_character_flag = opt_A
        clr_character_flag = opt_B
        clr_character_flag = opt_C
    }
}

#Become a Strategist
character_event = {
    id = HF.10025
    desc = EVTDESC_HF_10025
    picture = GFX_evt_upsetting_letter
    border = GFX_event_normal_frame_war

    is_triggered_only = yes

    option = {
        name = EVTOPTA_HF_10025

        if = {
            limit = {
                NOT = { trait = patient }
                NOT = { trait = wroth }
            }
            add_trait = patient
        }

        add_character_modifier = {
            modifier = hitting_the_books
            duration = 730
        }

        ai_chance = {
            factor = 1
            modifier = {
                factor = 4
                trait = brave
            }
            modifier = {
                factor = 3
                trait = ambitious
            }
        }
    }

    option = {
        name = EVTOPTB_HF_10025

         if = {
            limit = {
                NOT = { trait = diligent }
                NOT = { trait = slothful }
            }
            add_trait = diligent
        }
        if = {
            limit = {
                trait = slothful
            }
            remove_trait = slothful
        }

        add_character_modifier = {
            modifier = observing_the_troops
            duration = 730
        }

        ai_chance = {
            factor = 1
            modifier = {
                factor = 4
                trait = craven
            }
            modifier = {
                factor = 3
                trait = erudite
            }
        }
    }
    after = {
        character_event = { id = HF.10026 days = 60 random = 30 } #Lifestyle achieved: STRATEGIST
    }
}

#Lifestyle achieved: STRATEGIST
character_event = {
    id = HF.10026
    desc = EVTDESC_HF_10026
    picture = GFX_evt_teaching_moment
    border = GFX_event_normal_frame_war

    is_triggered_only = yes

    option = {
        name = EVTOPTA_HF_10026
        custom_tooltip = { text = EVTOPTA_HF_10026_tt }

        hidden_tooltip = {
            if = {
                limit = {
                    lifestyle_traits = 1
                }
                remove_lifestyle_trait_effect = yes
            }
        }
        add_trait = strategist
        add_legend_progress_trivial_effect = yes
        clr_character_flag = choosing_chaos_aspect
    }
}

# Become a Impaler
character_event = {
    id = HF.10030
    desc = EVTDESC_HF_10030
    picture = GFX_evt_hunt ### need new picture
    border = GFX_event_normal_frame_war

    is_triggered_only = yes

    option = {
        name = EVTOPTA_HF_10030 #You like to impale people for the cruelty and gore of it,

        add_character_modifier = {
            modifier = impaler_fun_student
            duration = 3650
        }

        ai_chance = {
            factor = 1
            modifier = {
                factor = 4
                trait = Lunatic
            }
        }
    }

    option = {
        name = EVTOPTB_HF_10030

        add_character_modifier = {
            modifier = impaler_sex_student #You like to impale people for sexual reasons
            duration = 3650
        }

        ai_chance = {
            factor = 1
            modifier = {
                factor = 4
                trait = Lustful
            }
        }
    }
    after = {
        character_event = { id = HF.10031 days = 60 random = 30 } #Lifestyle achieved: Impaler
    }
}

#Lifestyle achieved: Impaler
character_event = {
    id = HF.10031
    desc = EVTDESC_HF_10031
    picture = GFX_evt_hunt	 ### need new picture
    border = GFX_event_normal_frame_war

    is_triggered_only = yes

    option = {
        name = EVTOPTA_HF_10031

        hidden_tooltip = {
            if = {
                limit = {
                    lifestyle_traits = 1
                }
                remove_lifestyle_trait_effect = yes
            }
        }
        if = {
            limit = { has_nickname = no }
            give_nickname = nick_the_hunter
        }
        add_trait = impaler
        add_legend_progress_trivial_effect = yes
        clr_character_flag = choosing_chaos_aspect
    }
}

########################################################
# RANK 4 POWER - Champion Training
########################################################
character_event = {
    id = HF.10040
    picture = GFX_evt_teaching_moment
    border = GFX_event_normal_frame_war
    has_dlc = "Holy Fury"

    is_triggered_only = yes

    desc = {
        text = EVTDESC_HF_10040_A
        trigger = { society_member_of = warband_of_chaos }
    }
    desc = {
        text = EVTDESC_HF_10040_B
        trigger = { society_member_of = warband_of_nurgle }
    }
	desc = {
        text = EVTDESC_HF_10040_C
        trigger = { society_member_of = warband_of_tzeentch }
    }
	desc = {
        text = EVTDESC_HF_10040_D
        trigger = { society_member_of = warband_of_slaanesh }
    }
	desc = {
        text = EVTDESC_HF_10040_E
        trigger = { society_member_of = warband_of_khorne }
    }

    option = { #Is given Champion of X god trait
        name = EVTOPTA_HF_10040

        add_warband_leader_trait_effect = yes
        add_legend_progress_trivial_effect = yes
        clr_character_flag = warband_champion_training

		if = {
            limit = { society_member_of = warband_of_chaos }
            add_trait = champion_undivided
        }
		if = {
            limit = { society_member_of = warband_of_nurgle }
            add_trait = champion_nurgle
        }
		if = {
            limit = { society_member_of = warband_of_tzeentch }
            add_trait = champion_tzeentch
        }
		if = {
            limit = { society_member_of = warband_of_slaanesh }
            add_trait = champion_slaanesh
        }
		if = {
            limit = { society_member_of = warband_of_khorne }
            add_trait = champion_khorne
        }
    }
}

########################################################
# RANK 3 POWER - Inspire Warriors
########################################################
character_event = {
    id = HF.10059
    desc = EVTDESC_HF_10059
    picture = GFX_evt_battle
    border = GFX_event_normal_frame_war
    has_dlc = "Holy Fury"

    is_triggered_only = yes

    notification = yes

    option = { #Finally!
        name = EXCELLENT
        event_target:target_holding = { refill_holding_levy = yes }
        clr_character_flag = inspiring_warriors
        hidden_effect = {
            random_list = {
                10 = {
                    sound_effect = inspire_warriors_01
                }
                10 = {
                    sound_effect = inspire_warriors_02
                }
                10 = {
                    sound_effect = inspire_warriors_03
                }
            }
        }
    }
}



########################################################
# Maintenance AI population and rank up event
########################################################
#(fired from on_five_year_pulse)
# Root = Character
# From = Society
character_event = {
    id = HF.10050
    picture = GFX_evt_battle
    border = GFX_event_normal_frame_war
    hide_window = yes
    only_independent = yes
    has_dlc = "Holy Fury"

    is_triggered_only = yes

    trigger = {
        is_alive = yes
    }

    immediate = {
		#And maybe join yourself?
        if = {
            limit = {
                ai = yes
				OR = {
                    has_empty_warband_trigger = yes
                    has_warband_in_need_of_members_trigger = yes
                }
				forbidden_from_joining_warband_trigger = no
                is_in_society = no
                has_secret_religion_trait_trigger = no
                is_adult = yes
                NOT = { block_general_event_trigger = yes }
            }
            log = "[Root.GetTitledName] is trying to joining a lodge!"
            character_event = { id = HF.10051 }
        }
        #Make others join a warrior lodge...
        any_realm_lord = {
            limit = {
                ai = yes
                OR = {
                    has_empty_warband_trigger = yes
                    has_warband_in_need_of_members_trigger = yes
                }
				forbidden_from_joining_warband_trigger = no
                is_in_society = no
                has_secret_religion_trait_trigger = no
                is_adult = yes
                NOT = { block_general_event_trigger = yes }
				is_landed = yes
				NOT = { character = ROOT }
            }
            score_value = { #Prioritizes selecting some kind of warrior...
                value = 10
                warrior_recruit_score = yes
            }
            count = 2
            character_event = { id = HF.10051 }
        }
		any_realm_character = {
            limit = {
                ai = yes
                OR = {
                    has_empty_warband_trigger = yes
                    has_warband_in_need_of_members_trigger = yes
                }
				forbidden_from_joining_warband_trigger = no
                is_in_society = no
                has_secret_religion_trait_trigger = no
                is_adult = yes
                NOT = { block_general_event_trigger = yes }
            }
            score_value = { #Prioritizes selecting some kind of warrior...
                value = 10
                warrior_recruit_score = yes
            }
            count = 1
            character_event = { id = HF.10051 }
        }
    }
}

### Follow-up: If was eligible, AI joins a warrior lodge
character_event = {
    id = HF.10051
    hide_window = yes
    is_triggered_only = yes
    immediate = {
        if = {
            limit = {
                religion_tzeentch_worshipper_trigger = yes
                can_join_society = warband_of_tzeentch
            }
            join_society = warband_of_tzeentch
		}
        else_if = {
            limit = {
                religion_nurgle_worshipper_trigger = yes
                can_join_society = warband_of_nurgle
            }
            join_society = warband_of_nurgle
        }
        else_if = {
            limit = {
                religion_slaanesh_worshipper_trigger = yes
                can_join_society = warband_of_slaanesh
            }
            join_society = warband_of_slaanesh
        }
        else_if = {
            limit = {
                religion_khorne_worshipper_trigger = yes
                can_join_society = warband_of_khorne
            }
            join_society = warband_of_khorne
        }
        else_if = {
            limit = {
                religion_chaos_worshipper_trigger = yes
                can_join_society = warband_of_chaos
            }
            join_society = warband_of_chaos
        }
        else = {
            log = "[Root.GetTitledName] failed to join a society in event HF.10051"
            break = yes
        }
        log = "[Root.GetTitledName] joined [Root.Society.GetName] society!"

        apply_random_minor_injury_effect = yes #So it seems they were in a duel!

        if = {
            limit = {
                NOT = {
                    society = {
                        any_society_member = {
                            is_society_grandmaster = yes
                        }
                    }
                }
            }
            log = "[This.Society.GetName] is a society without a grandmaster and I am trying to be set as the grandmaster."
            set_society_grandmaster = yes # Set character as Grand Master (if there was none)
            add_society_currency_massive_effect = yes
        }

        society = {
            any_society_member = { #Send notification to players that society is growing...
                limit = {
                    ai = no
                    society_rank = 4
                }
                character_event = { id = HF.10052 days = 1 random = 15 }
            }
        }
    }
}

#Notification for players, that their warrior lodge is growing
character_event = {
    id = HF.10052
    desc = EVTDESC_HF_10052
    picture = GFX_evt_battle
    is_triggered_only = yes

    hide_from = yes

    trigger = {
        is_alive = yes
        NOT = { has_character_modifier = warband_HF_10052_cooldown }
    }

    notification = yes

    immediate = {
        hidden_effect = {
            add_character_modifier = {
                name = warband_HF_10052_cooldown
                duration = 30
                hidden = yes
            }
        }
    }

    option = {
        name = EXCELLENT
    }
}

### Maintenance: Warrior Lodge Society spawns if it died (fired from on_society_destroyed)
# Root = Character
# From = Society
character_event = {
    id = HF.10053
    is_triggered_only = yes
    has_dlc = "Holy Fury"
    hide_window = yes
    hide_from = yes

    trigger = {
        FROM = { this_society_is_a_warband_trigger = yes }
    }

    immediate = {
        FROM = { save_event_target_as = warband_to_revive }

        if = {
            limit = {
                is_landed = yes
            }
            #Pick someone under you to lead the warrior lodge...
            any_courtier_or_vassal = {
                limit = {
                    ai = yes
                    has_secret_religion_trait_trigger = no
                    is_in_society = no
                    age = 16
                    NOT = { block_general_event_trigger = yes }
                }
                score_value = { #Prioritizes selecting some kind of warrior...
                    value = 10
                    warrior_recruit_score = yes
                    warband_revival_selection_score = yes
                }
                join_society = event_target:warband_to_revive
                if = {
                    limit = {
                        NOT = {
                            society = {
                                any_society_member = {
                                    is_society_grandmaster = yes
                                }
                            }
                        }
                    }
                    set_society_grandmaster = yes # Set character as Grand Master
                    add_society_currency_massive_effect = yes
                }
                add_society_currency_massive_effect = yes
            }
        }
        else = {
            liege = {
                #Pick someone under your *liege* to lead the warrior lodge...
                any_courtier_or_vassal = {
                    limit = {
                        ai = yes
                        has_secret_religion_trait_trigger = no
                        is_in_society = no
                        age = 16
                        NOT = { block_general_event_trigger = yes }
                    }
                    score_value = { #Prioritizes selecting some kind of warrior...
                        value = 10
                        warrior_recruit_score = yes
                        warband_revival_selection_score = yes
                    }
                    join_society = event_target:warband_to_revive
                    if = {
                        limit = {
                            NOT = {
                                society = {
                                    any_society_member = {
                                        is_society_grandmaster = yes
                                    }
                                }
                            }
                        }
                        set_society_grandmaster = yes # Set character as Grand Master
                        add_society_currency_massive_effect = yes
                    }
                }
            }
        }
         log = "The revive event fired for [From.GetName]."
    }
}

### Maintenance: Rank up event (AI only)
character_event = {
    id = HF.10054
    hide_window = yes
    is_triggered_only = yes
    has_dlc = "Holy Fury"
    ai = yes

	is_in_society = yes

    trigger = {
        is_member_of_any_warband_trigger = yes
		is_inaccessible_or_incapable_trigger = no
		society_can_rank_up = yes
		has_society_currency_minor_trigger = yes
    }

    immediate = {
        society = {
            save_event_target_as = my_warband
        }
        random_list = {
            50 = {}
            50 = {
                trigger = {
                    society_rank < 3
                }
                society_rank_up = 1
                detract_society_currency_medium_effect = yes # at a worst, they are put at 0 currency
            }
            500 = {
                trigger = {
                    society_rank == 3
                    NOT = {
                        is_society_rank_full = { # Checks if named society's rank is full
                            society = event_target:my_warband
                            rank = 4
                        }
                    }
                }
                society_rank_up = 1
                detract_society_currency_medium_effect = yes # at a worst, they are put at 0 currency
            }
        }

        #If the warrior lodge has been blocked from the Legendary Gathering decision for 100 years...
        if = {
            limit = {
                event_target:my_warband = {
                    had_flag = {
                        flag = used_legendary_gathering
                        years = 100
                    }
                }
            }
            event_target:my_warband = {
                clr_flag = used_legendary_gathering #So the whole thing is reset...
                clr_flag = block_society_progress
                set_society_progress = 0
            }
        }
    }
}

### Trying to rank up to Hero: To duel a current hero or not? (for players)
character_event = {
    id = HF.10060
    title = proving_your_worth_title
    desc = EVTDESC_HF_10060
    picture = GFX_evt_camaraderie
    border = GFX_event_normal_frame_war
    has_dlc = "Holy Fury"
    ai = no
    is_triggered_only = yes
    portrait = event_target:combatant_2

    trigger = {
        is_alive = yes
    }

    immediate = {
        event_target:my_society = { #choose a target...
            any_society_member = {
                limit = {
                    prisoner = no
                    society_rank == 4
                    ai = yes
                    NOT = { trait = incapable }
                    NOT = { has_character_flag = call_to_legend_active }
                }
                score_value = { #Prioritizes selecting some kind of warrior...
                    value = 10
                    bad_soldier_outcome_score = yes
                }
                save_event_target_as = combatant_2
            }
        }
        save_event_target_as = combatant_1
    }

    option = {
        name = EVTOPTA_HF_10060 #I have been itching for a fight anyway!
        change_society_currency = -2000
        set_character_flag = fighting_to_rank_up
        character_event = { id = HFP.10100 } #Send actual duel events...
    }
    option = {
        name = EVTOPTB_HF_10060 #Perhaps it is better I simply wait this out...
        clr_character_flag = has_sent_request_to_rank_up
    }
}

#Ping to opponent (provided they did not die)...
character_event = {
    id = HF.10061
    hide_window = yes
    is_triggered_only = yes
    trigger = {
        #OR = {
        #    event_target:other_combatant = { has_character_flag = fighting_to_rank_up }
        #    event_target:champion_character = { character = ROOT }
        #}
    }

    immediate = {
        if = {
            limit = {
                has_character_flag = may_join_society
            }
            event_target:combatant_1 = { letter_event = { id = HF.10062 } } #Send rank-up request accepted-event...
        }
        else = {
            event_target:combatant_1 = { letter_event = { id = HF.10063 } } #Send rank-up request rejected-event...
        }
    }
}

#Hero admits defeat: "YES, you may take my place at rank 4"... (for player)
letter_event = {
    id = HF.10062
    border = GFX_event_letter_frame_intrigue
    has_dlc = "Holy Fury"
    ai = no
    is_triggered_only = yes

    trigger = { is_alive = yes }

    desc = {
        trigger = { event_target:combatant_2 = { character = FROM } }
        text = EVTDESC_HF_10062_A
    }
    desc = {
        trigger = { event_target:combatant_2 = { NOT = { character = FROM } } }
        text = EVTDESC_HF_10062_B
    }

    option = {
        name = EVTOPTA_HF_10062 #Thank you for understanding.
        society_rank_up = 1
        clr_character_flag = has_sent_request_to_rank_up
        clr_character_flag = fighting_to_rank_up
        hidden_effect = { #Demote the other character...!
            if = { limit = { FROM = { character = event_target:combatant_2 } }
                FROM = { society_rank_down = 1 }
            }
        }
    }
}

#No, you may *not* take my place at rank 4... (for player)
letter_event = {
    id = HF.10063
    border = GFX_event_letter_frame_intrigue
    has_dlc = "Holy Fury"
    ai = no
    is_triggered_only = yes

    desc = EVTDESC_HF_10063_A

    option = {
        name = EVTOPTA_HF_10063 #I would angry, if I wasn't so humiliated...
        change_society_currency = 500
        clr_character_flag = has_sent_request_to_rank_up
        clr_character_flag = fighting_to_rank_up
        hidden_effect = { add_character_modifier = { name = lost_rank_up_duel_cooldown duration = 600 hidden = yes } }
    }
}

character_event = {
    id = HF.10070
    desc = EVTDESC_HF_100070
	picture = GFX_evt_camaraderie
    border = GFX_event_normal_frame_war
    is_triggered_only = yes

    option = {
		name = EVTDESCA_HF_100070
		hidden_tooltip = {
			character_event = { id = HF.10071 }
		}
    }
}
character_event = {
    id = HF.10071
    desc = EVTDESC_HF_100071
	picture = GFX_evt_camaraderie
    border = GFX_event_normal_frame_war
    is_triggered_only = yes

    option = {
		name = EVTDESCA_HF_100071
		trigger = {
			OR = {
				religion_chaos_worshipper_trigger = yes
				religion_nurgle_worshipper_trigger = yes
			}
		}
		character_event = { id = HF.10072 }
    }
	option = {
		name = EVTDESCB_HF_100071
		trigger = {
			OR = {
				religion_chaos_worshipper_trigger = yes
				religion_tzeentch_worshipper_trigger = yes
			}
		}
		character_event = { id = HF.10073 }
    }
	option = {
		name = EVTDESCC_HF_100071
		trigger = {
			OR = {
				religion_chaos_worshipper_trigger = yes
				religion_slaanesh_worshipper_trigger = yes
			}
		}
		character_event = { id = HF.10074 }
    }
	option = {
		name = EVTDESCD_HF_100071
		trigger = {
			OR = {
				religion_chaos_worshipper_trigger = yes
				religion_khorne_worshipper_trigger = yes
			}
		}
		character_event = { id = HF.10075 }
    }
}
character_event = {
    id = HF.10072
    desc = EVTDESC_HF_100072
	picture = GFX_evt_camaraderie
    border = GFX_event_normal_frame_war
    is_triggered_only = yes

    option = {
		name = EVTDESCA_HF_100072
		add_character_modifier = {
			name = imp_bubo
			duration = -1
		}
    }
}
character_event = {
    id = HF.10073
    desc = EVTDESC_HF_100073
	picture = GFX_evt_camaraderie
    border = GFX_event_normal_frame_war
    is_triggered_only = yes

    option = {
		name = EVTDESCA_HF_100073
		add_character_modifier = {
			name = imp_fearling
			duration = -1
		}
    }
}
character_event = {
    id = HF.10074
    desc = EVTDESC_HF_100074
	picture = GFX_evt_camaraderie
    border = GFX_event_normal_frame_war
    is_triggered_only = yes

    option = {
		name = EVTDESCA_HF_100074
		add_character_modifier = {
			name = imp_muse
			duration = -1
		}
    }
}
character_event = {
    id = HF.10075
    desc = EVTDESC_HF_100075
	picture = GFX_evt_camaraderie
    border = GFX_event_normal_frame_war
    is_triggered_only = yes

    option = {
		name = EVTDESCA_HF_100075
		add_character_modifier = {
			name = imp_malice
			duration = -1
		}
    }
}
character_event = {
    id = HF.10080
    desc = EVTDESC_HF_100080
	picture = GFX_evt_camaraderie
    border = GFX_event_normal_frame_war
    is_triggered_only = yes

    option = {
		name = EVTDESCA_HF_100080
		add_trait = khorne_berserker
    }
}
character_event = {
	id = HF.10090
    hide_window = yes
    is_triggered_only = yes

    immediate = {
		add_legend_progress_trivial_effect = yes
		add_character_modifier = {
			name = imp_malice
			duration = -1
		}
    }
}
