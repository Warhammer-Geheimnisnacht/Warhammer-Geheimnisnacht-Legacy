# == normal scopes(including posttitle scopes) ==
# ROOT = receiver
# FROM = giver
# <no scope change> = attacker or receiver
# == title scopes ==
# ROOT = receiver
# FROM = giver
# <no scope change> = thirdparty landed title

# the following effects/triggers exists (example execution order: on_success->on_success_title->on_success_posttitle):
# is_valid, is_valid_title, on_add, on_add_title, on_add_posttitle, on_success, on_success_title, on_success_posttitle, on_fail, on_fail_title, on_fail_posttitle, on_reverse_demand, on_reverse_demand_title, on_reverse_demand_posttitle

# Added on_attacker_leader_death, on_defender_leader_death and on_thirdparty_death, which all trigger when corresponding character dies
# These three all have war scopes, which currently has the following scope changes:
# attacker, defender, thirdparty(only valid if thirdparty character is involved), thirdparty_title(only valid if thirdparty title is involved)
#
# ai_will_do: modifies value AI places on the CB compared to other CBs (default: 1) Note: is in title scope
# can_use_gui: If otherwise valid, the CB is listed in the Diplo View, but you can't declare war unless 'can_use_gui' is also valid (also shows a trigger tooltip.)

# max_defender_occupation_score/max_attacker_occupation_score - Defines how much war score it is possible for the defender/attacker to gain by occupying provinces. Defaults to 100. Make sure the CB has ticking warscore if using this or you could end up with never-ending wars
# max_defender_battle_score/max_attacker_battle_score - Defines how much score it is possible for the defender/attacker to gain by fighting battles. Defaults to the defines MAX_WARSCORE_FROM_BATTLE_DEFENDERS/MAX_WARSCORE_FROM_BATTLE_ATTACKERS
# hostages_block_cb	- Defaults to "yes". If set to "no", the defender having close relatives of yours imprisoned does not prevent you from declaring war
# attacker_unoccupied_warscore = yes - If attacker completely unoccupied, attacker will get ticking warscore. Only works if no title is targetted
# defender_unoccupied_warscore = yes - If defender completely unoccupied, defender will get ticking warscore. Only works if no title is targetted
# capturing_attacker_is_complete_victory - Whether capturing the attacker as a prisoner is considered automatic victory for the defender. Defaults to yes. If set to no, capture instead gives CAPTURED_HEIR_WAR_SCORE warscore
# capturing_defender_is_complete_victory - Whether capturing the defender as a prisoner is considered automatic victory for the attacker. Defaults to yes. If set to no, capture instead gives CAPTURED_HEIR_WAR_SCORE warscore

# sort_priority = 1000 # Used to override the order CBs appear in the UI. By default a CB has priority 0. Higher priority will make it appear earlier, lower later. Ties are broken by definition order, as before. It is recommended to use numbers with large gaps between them so as to make it easy to slot new CBs in between older ones
# full_hostility = yes # Use the defender's primary title rather than the 3rd party title to determine hostility to other targets. Anyone else targeting them with a CB with this flag will be hostile, as will anyone targeting the primary title
# third_party_portrait = some_scope # Optional. Will cause the scoped character to be used as the 3rd party portrait in the war overview. Scopes are the same as can_use
# diplo_view_region = some_region # Optional. Will override which provinces are highlighted on the map when the CB is selected in the diplomacy view.
#
# 0: If you have a personal claim upon a title in a realm, you can push this claim to usurp the title.
# 42
###The CB Blocks needed to be adjusted
#		OR={
#			has_global_flag = clean_mordheim
#			NOT={county={de_jure_liege = d_mordheim }}
#		}
#		NAND = {
#			location = { region = mordheim }
#			ROOT = {
#				has_global_flag = clean_mordheim
#				capital_scope = { NOT = { region = mordheim } }
#			}
#		}
race_for_mordheim = {
	name = CB_NAME_COUNTY_CONQUEST
	war_name = WAR_NAME_COUNTY_CONQUEST
	sprite = 22
	truce_days = 1825
	hostile_against_others = yes
	is_permanent = yes
	check_all_titles = yes # if permanent, setting this to true will check against all of someones titles, including vassal held titles
	can_ask_to_join_war = no

	allow_distant = yes
	allowed_to_target_tributaries = no

	sort_priority = 700

	can_use_gui = {
		ROOT = {
			piety = 100
		}
	}
	can_use = {
		OR={
			ROOT = {
				mercenary = no
				OR={
				has_character_flag = martial_agent_mordheim
				has_character_flag = mercenary_agent_mordheim
				has_character_flag = intrigue_agent_mordheim
				}
			}
			AND={
				NOT={has_global_flag = clean_mordheim}
				ROOT = {
					capital_scope = { region = world_old_world_empire_mordheim }
				}
				FROM = {
					capital_scope = { region = world_old_world_empire_mordheim }
				}
			}
		}
	}

	can_use_title = {
		tier = COUNT
		county={de_jure_liege = d_mordheim }
	}

	is_valid_title = {
	}

	on_add = {
		hidden_tooltip = { fire_haruspicy_event_effect = yes }
		if = {
			limit = { defender = { is_offmap_governor = offmap_cathay } }
			attacker = {
				sound_effect = china_angered_emperor
				detract_grace_super_huge_effect = yes
			}
		}
		ROOT={prestige = -100}
		any_playable_ruler={
			if = {
				limit = {
					reverse_has_opinion_modifier = { who = ROOT modifier = opinion_funded_expedition }
				}
				prestige = 100
				save_event_target_as = mordheim_beneficiary
			}
		}
	}

	on_success_title = { #winning the war
		usurp_title_plus_barony_if_unlanded = { target = ROOT type = invasion }

		any_de_jure_vassal_title = { # take all baronies too
			limit = {
				has_holder = yes
				holder_scope = {
					OR = {
						character = FROM
						is_liege_or_above = FROM
						AND = {
							is_liege_or_above = ROOT
							NOT = { culture = ROOT }
							NOT = { religion = ROOT }
						}
					}
				}
			}
			show_scope_change = no
			usurp_title = ROOT
		}
		ROOT={
			any_demesne_title = {
				limit = { tier = BARON }
				remove_holding_modifier = recently_conquered
				refill_holding_levy = yes
			}
			wealth = 300
		}
		ROOT = {
			show_scope_change = no
			participation_scaled_prestige = 100
			participation_scaled_piety = 50
		}
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			hidden_tooltip = {
				participation_scaled_prestige = 100
				participation_scaled_piety = 50
			}
		}

		if = {
			limit = {
				NOT = { FROM = { religion = ROOT } }
			}
			ROOT = {
				show_scope_change = no
				religion_authority = {
					modifier = won_county_conquest
				}
			}
		}

		#To handle Warrior Lodge mission "Wage War" completion...
		attacker = { save_event_target_as = attacker_target }
		defender = { save_event_target_as = defender_target }

		if = {
			limit = {
				event_target:attacker_target = { has_quest = quest_warband_war }
				is_quest_target_of = event_target:attacker_target
			}
			event_target:attacker_target = {
				show_scope_change = no
				tooltip = { clr_quest = quest_warband_war }
				set_character_flag = won_war@event_target:defender_target
				#character_event = { id = HF.10514 days = 3 } #Sent from on_action instead
			}
		}
		event_target:mordheim_beneficiary = {
			make_tributary = { #event_target:mordheim_beneficiary
				who = ROOT
				tributary_type = permanent
			}
		}

	}

	on_fail_title = { #white peace
		ROOT = {
			show_scope_change = no
			prestige = -100
		}

		if = {
			limit = {
				NOT = { FROM = { religion = ROOT } }
			}
			ROOT = {
				show_scope_change = no
				religion_authority = {
					modifier = lost_county_conquest
				}
			}
		}

		FROM = {
			show_scope_change = no
			participation_scaled_prestige = 50
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 50 }
		}

		#To handle Warrior Lodge mission "Wage War" completion...
		attacker = { save_event_target_as = attacker_target }
		defender = { save_event_target_as = defender_target }
		ROOT={
			any_suzerain={
			clr_character_flag=maintaining_agents
			}
		}
		if = {
			limit = {
				event_target:attacker_target = { has_quest = quest_warband_war }
				is_quest_target_of = event_target:attacker_target
			}
			event_target:attacker_target = {
				show_scope_change = no
				tooltip = { clr_quest = quest_warband_war }
				set_character_flag = white_peace@event_target:defender_target
				#character_event = { id = HF.10514 days = 3 } #Sent from on_action instead
			}
		}
	}

	on_reverse_demand = { #losing the war
		ROOT = {
			show_scope_change = no
			prestige = -200
			transfer_wealth = {
				to = FROM
				value = 4.0
				min=300
				max=300
			}
			remove_character_flag = martial_agent_mordheim
			remove_character_flag = mercenary_agent_mordheim
			remove_character_flag = intrigue_agent_mordheim
		}

		if = {
			limit = {
				NOT = { FROM = { religion = ROOT } }
			}
			ROOT = {
				show_scope_change = no
				religion_authority = {
					modifier = lost_county_conquest
				}
			}
		}

		ROOT={
			any_suzerain={
			clr_character_flag=maintaining_agents
			}
		}
		FROM = {
			show_scope_change = no
			participation_scaled_prestige = 100
			participation_scaled_piety = 50
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = {
				participation_scaled_prestige = 100
				participation_scaled_piety = 50
			}
		}
	}
	on_reverse_demand_title = {
		#To handle Warrior Lodge mission "Wage War" completion...
		attacker = { save_event_target_as = attacker_target }
		defender = { save_event_target_as = defender_target }

		if = {
			limit = {
				event_target:attacker_target = { has_quest = quest_warband_war }
				is_quest_target_of = event_target:attacker_target
			}
			event_target:attacker_target = {
				show_scope_change = no
				tooltip = { clr_quest = quest_warband_war }
				set_character_flag = lost_war@event_target:defender_target
				#character_event = { id = HF.10514 days = 3 } #Sent from on_action instead
			}
		}
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}

	ai_will_do = {
		factor = 1
	}
}
